context.properties = {
   # Uncomment this if the default quantum is too small and you are
   # experiencing a bunch of overruns or underruns.
   #default.clock.min-quantum = 512

   # Set the allowed audio rates to work around problems with Firefox
   default.clock.allowed-rates = [ 44100 48000 ]

   # Default size of the recording buffer in bytes.  This is very large
   # because a larger buffer only wastes some memory, whereas a small
   # buffer risks overruns in the audio daemon (pacat-simple-vchan).
   org.qubes-os.record.buffer-size = 1048576

   # Default size of the playback buffer in bytes.  This is smaller
   # because a large buffer provides less benefit here: it is much more
   # likely for the audio daemon to underrun (not be able to obtain
   # enough samples) than for this module to overrun (run out of space).
   org.qubes-os.playback.buffer-size = 65536

   # The Qubes PipeWire module tries to keep the amount of data buffered
   # in each vchan roughly constant.  These parameters set this amount.
   # Note that these parameters have units of *bytes*, not samples!
   # FIXME: use samples instead.

   # Target number of bytes in the playback vchan
   org.qubes-os.playback.target-buffer = 8192

   # Target number of bytes in the recording vchan
   org.qubes-os.record.target-buffer = 8192
}

context.modules = [
    {
        name = libpipewire-module-qubes
        # Arguments passed to the module override context properties.
        # To reduce xruns at the expense of increased recording latency,
        # one could add:
        #
        # args = { org.qubes-os.record.target-buffer = 16384 }
        args = { }
    }
]
